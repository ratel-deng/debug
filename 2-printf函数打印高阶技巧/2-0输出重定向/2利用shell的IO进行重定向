在Linux下，文本流和二进制流是相同的：
	文本流是由文本行组成的序列，以'\n'结尾（回车或换行符代替）
	二进制流由未经处理的字节组成
流与文件的连接：
	打开一个流，该流将与一个文件连接起来，关闭流则断开连接
	指向该打开文件的指针记录了控制该流的信息
	程序执行时，默认会打开stdin、stdout和stderr三个文件
重定向符：
	输出重定向：>(覆盖)、>>(追加)、>!(强制覆盖)
	输入重定向：<

标准错误重定向：
	2>：标准错误重定向到一个文件，并覆盖原来的文件(b-shell)
	catxxx file 2>tmp
	2>>：标准错误重定向到一个文件(追加)。1>默认为>
	2>&1：将标准错误重定向到标准输出(将本来输出到2里的内容输出到1)
	catxxx file 1>tmp 2>&1
	>&：将一个输出重定向到另一个句柄的输入中
为什么要进行重定向：
	将屏幕输出的重要信息保存下来
	有时候不希望打印干扰屏幕
	正确和错误的信息需要分别输出时

关于重定向的补充：
	tee命令：该命令接收到来自stdin的数据写入到tmp文件，并做一个副本补充给stdin
	cat file | tee tmp | cat -n
	cat file | tee -a tmp | cat -n	加上-a表示可以追加

	stdin stdout stderr文件在/dev目录下

	自定义文件描述符：
	exec命令：
	exec 3>tmp	3成为tmp的输出文件描述符
	cat file >&3	file的内容将会输出到tmp，只能使用一次

	exec 4<tmp	4成为tmp的输入文件描述符
	cat <&4		将4作为stdout输出，只能输出一次
（再使用要重复exec命令）
	exec 4<&3
	#将文件描述符3拷贝给4
	exec 4<&-
	#结束该文件描述符




